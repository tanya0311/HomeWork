{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/HomeWork/src/components/TodoList/TodoList1.tsx\";\nimport React, { useState } from 'react';\nimport classes from './TodoList1.module.css';\nimport { v1 } from \"uuid\";\nimport { Input } from \"../../common/input/Input\";\nimport { Button } from \"../../common/button/Button\";\nexport function Todolist(props) {\n  //task 3\n  let [names, setNames] = useState([{\n    id: v1(),\n    name: ' Vasaya'\n  }]);\n  let [newNames, setNewNames] = useState(' ');\n\n  function HelloNames(newNames) {\n    //if (newNames.length >= 2) или\n    if (newNames.trim() !== '') {\n      alert('Hello' + newNames);\n      addNames(newNames);\n    } // перенесла в  input\n    // else {\n    //    setError('Field is required')\n    // }\n\n\n    addNames(' ');\n  }\n\n  function addNames(newNames) {\n    let writeName = {\n      id: v1(),\n      name: newNames\n    };\n    setNames([writeName, ...names]);\n    console.log(newNames.length + names.length);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.TodoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    newNames: newNames,\n    setNewNames: setNewNames,\n    HelloNames: HelloNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"The number of objects in the array: \", names.length), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.tasks.map(t => {\n    // const onRemoveHandler = () => {\n    //     props.removeTask(t.id)\n    // };\n    const onChang1Handler = e => {\n      props.ChangTaskStatus(t.id, e.currentTarget.checked);\n    };\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: t.id,\n      className: t.isDone ? classes.isdone : ' ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: t.isDone,\n      onChange: onChang1Handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, t.title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 63\n      }\n    }, t.p)), /*#__PURE__*/React.createElement(Button, {\n      title: 'delete',\n      callbackFun: () => {\n        props.removeTask(t.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btnTL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    title: 'all',\n    callbackFun: () => {\n      props.changeFilter('all');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    title: 'important',\n    callbackFun: () => {\n      props.changeFilter('important');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    title: 'completed',\n    callbackFun: () => {\n      props.changeFilter('completed');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/HomeWork/src/components/TodoList/TodoList1.tsx"],"names":["React","useState","classes","v1","Input","Button","Todolist","props","names","setNames","id","name","newNames","setNewNames","HelloNames","trim","alert","addNames","writeName","console","log","length","TodoList","title","tasks","map","t","onChang1Handler","e","ChangTaskStatus","currentTarget","checked","isDone","isdone","text","p","removeTask","btnTL","changeFilter"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoList1.module.css';\nimport {v1} from \"uuid\";\nimport {Input} from \"../../common/input/Input\";\nimport {Button} from \"../../common/button/Button\";\n\n\nexport type TaskType = {\n    id: string\n    title: string\n    p: string\n    isDone: boolean\n}\n\ntype PropsType = {\n    title: string\n    tasks: Array<TaskType>\n    removeTask: (taskId: string) => void\n    changeFilter: (newFilterValues: FilterValuesType) => void\n    ChangTaskStatus: (taskId: string, isDone: boolean) => void\n    filter: FilterValuesType\n}\n\nexport type FilterValuesType = 'all' | 'important' | 'completed'\n\n\nexport function Todolist(props: PropsType) {\n    //task 3\n    let [names, setNames] = useState([{id: v1(), name: ' Vasaya'}]);\n    let [newNames, setNewNames] = useState(' ');\n\n\n    function HelloNames(newNames: string) {\n        //if (newNames.length >= 2) или\n        if (newNames.trim() !== '') {\n            alert('Hello' + newNames);\n            addNames(newNames);\n        }\n        // перенесла в  input\n        // else {\n        //    setError('Field is required')\n        // }\n        addNames(' ')\n    }\n\n    function addNames(newNames: string) {\n        let writeName = {id: v1(), name: newNames};\n        setNames([writeName, ...names]);\n        console.log(newNames.length + names.length);\n    }\n\n\n    return <div className={classes.TodoList}>\n        <br/>\n\n        <Input newNames={newNames} setNewNames={setNewNames} HelloNames={HelloNames}/>\n\n        <p>The number of objects in the array: {names.length}</p>\n        <br/>\n        <h1>{props.title}</h1>\n\n        <ol>\n            {\n                props.tasks.map((t) => {\n                    // const onRemoveHandler = () => {\n                    //     props.removeTask(t.id)\n                    // };\n                    const onChang1Handler = (e: ChangeEvent<HTMLInputElement>) => {\n                        props.ChangTaskStatus(t.id, e.currentTarget.checked)\n                    }\n                    return <li key={t.id} className={t.isDone ? classes.isdone : ' '}>\n                        <input type=\"checkbox\" checked={t.isDone} onChange={onChang1Handler}/>\n                        <p className={classes.text}>{t.title} <span>{t.p}</span></p>\n                        {/*<button className={classes.delete}*/}\n                        {/*        onClick={onRemoveHandler}> delete*/}\n                        {/*</button>*/}\n                        <Button title={'delete'}\n                                callbackFun={() => {\n                                    props.removeTask(t.id)\n                                }}/>\n                    </li>\n                })\n            }\n        </ol>\n        <div className={classes.btnTL}>\n\n            <Button title={'all'}\n                    callbackFun={() => {\n                        props.changeFilter('all')\n                    }}/>\n            <Button\n                title={'important'}\n                callbackFun={() => {\n                    props.changeFilter('important')\n                }}\n            />\n            <Button title={'completed'}\n                    callbackFun={() => {\n                        props.changeFilter('completed')\n                    }}/>\n\n\n        </div>\n    </div>\n}\n\n"]},"metadata":{},"sourceType":"module"}